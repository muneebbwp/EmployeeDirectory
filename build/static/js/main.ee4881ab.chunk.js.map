{"version":3,"sources":["components/EmployeeTable/index.js","components/FilterEmployees/index.js","components/Footer/index.js","components/Header/index.js","App.js","utils/API.js","reportWebVitals.js","index.js"],"names":["EmployeeTable","employees","useState","sortedEmployees","updateSortedEmployees","useEffect","className","scope","onClick","updateSort","sort","a","b","nameA","name","first","nameB","map","location","city","state","country","postcode","thumbnail","picture","cell","phone","gender","email","last","title","key","alt","src","FilterEmployees","updateEmployees","inputValue","updateInput","filteredEmployees","filter","toLowerCase","indexOf","value","onChange","e","target","Footer","href","Header","App","initialEmployees","updateAvailableEmployees","employeesToRender","updateEmployeesToRender","axios","get","then","results","data","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ee4881ab.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './style.css';\n\nconst EmployeeTable = ({ employees }) => {\n    const [sortedEmployees, updateSortedEmployees] = useState([]);\n    useEffect(() => updateSortedEmployees(employees), [employees]);\n\n    return (\n        <div className='table-responsive'>\n            <table className=\"table table-striped\">\n                <thead className='table-header'>\n                    <tr>\n                        <th scope=\"col\">Picture</th>\n                        <th scope=\"col\">Title</th>\n                        <th\n                            scope=\"col\"\n                            onClick={() => {\n                                const usersCopy = [...employees];\n                                const updateSort = usersCopy.sort((a, b) => {\n                                    const nameA = a.name.first;\n                                    const nameB = b.name.first;\n\n                                    if (nameA < nameB) {\n                                        return -1;\n                                    }\n                                    if (nameA > nameB) {\n                                        return 1;\n                                    }\n\n                                    return 0;\n                                });\n\n                                updateSortedEmployees(updateSort);\n                            }}\n                        >\n                            FirstName\n            </th>\n                        <th scope=\"col\">LastName</th>\n                        <th scope=\"col\">Gender</th>\n                        <th scope=\"col\">Email</th>\n                        <th scope=\"col\">Phone Number</th>\n                        <th scope=\"col\">Mobile</th>\n                        <th scope=\"col\">City</th>\n                        <th scope=\"col\">State</th>\n                        <th scope=\"col\">Country</th>\n                        <th scope=\"col\">Zip Code</th>\n                    </tr>\n                </thead>\n                <tbody className='table-data'>\n                    {sortedEmployees.map(\n                        ({\n                            location: { city, state, country, postcode },\n                            picture: { thumbnail },\n                            cell,\n                            phone,\n                            gender,\n                            email,\n                            name: { first, last, title }\n                        }) => (\n                            <tr key={email}>\n                                <td>\n                                    <img alt=\"Employee images\" src={thumbnail} />\n                                </td>\n                                <td>{title}</td>\n                                <th>{first}</th>\n                                <td>{last}</td>\n                                <td>{gender}</td>\n                                <td>{email}</td>\n                                <td>{phone}</td>\n                                <td>{cell}</td>\n                                <td>{city}</td>\n                                <td>{state}</td>\n                                <td>{country}</td>\n                                <td>{postcode}</td>\n                                <td></td>\n                            </tr>\n                        )\n                    )}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default EmployeeTable;\n","import React, { useEffect, useState } from 'react';\nimport \"./style.css\";\n\n\nconst FilterEmployees = ({ employees, updateEmployees }) => {\n    const [inputValue, updateInput] = useState(\"\");\n\n    useEffect(() => {\n        const filteredEmployees =\n            inputValue === \"\" ? employees : employees.filter(\n                ({ name: { first } }) =>\n                    first.toLowerCase().indexOf(inputValue.toLowerCase()) >= 0\n            );\n\n        updateEmployees(filteredEmployees);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [inputValue, employees]);\n\n    return (\n        <div className=\"filter-data\">\n            <p className='sub-header'>\n                To filter by first name, please begin your search in the user input!\n            </p>\n            <input className='input-box' value={inputValue} onChange={e => updateInput(e.target.value)} />\n        </div>\n    );\n};\n\nexport default FilterEmployees;\n","import React from 'react';\nimport './style.css';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <a href=\"https://www.linkedin.com/in/enxhi-salaj-09a859173/\"><i className=\"fab fa-linkedin fa-2x\"></i></a>\n            <a href=\"https://github.com/Enxhis\"><i className=\"fab fa-github fa-2x\"></i> </a>\n            <br></br>\n            <p className=\"copyright\">Â© Enxhi Salaj 2021</p>\n\n        </footer>\n    );\n};\n\nexport default Footer;\n","import React from 'react';\nimport \"./style.css\";\n\nfunction Header() {\n    return (\n        <div className='header'>\n            <h1>Employee Directory</h1>\n        </div>\n    )\n}\n\nexport default Header;\n","import React, { useEffect, useState } from 'react';\nimport EmployeeTable from './components/EmployeeTable';\nimport FilterEmployees from './components/FilterEmployees';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport { getEmployees } from \"./utils/API\";\n\nfunction App() {\n  const [initialEmployees, updateAvailableEmployees] = useState([]);\n  const [employeesToRender, updateEmployeesToRender] = useState([]);\n\n  // added use effect to update the data in the table\n  useEffect(() => {\n    getEmployees().then(({ data: { results } }) => updateAvailableEmployees(results));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <FilterEmployees employees = { initialEmployees } updateEmployees = { updateEmployeesToRender } />\n      <EmployeeTable employees = {employeesToRender} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\n\nexport const getEmployees = function() {\n  return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\n};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// To start measuring performance in the app, pass a function\nreportWebVitals();\n"],"sourceRoot":""}